GENERAL:
  task: train  # train, test
  manual_seed: 123
  model_dir: model/pointgroup/pointgroup.py
  dataset_dir: data/scannetv2_inst.py
  distributed: True

DATA:
  data_root: dataset
  dataset: scannetv2
  filename_suffix: _inst_nostuff.pth

  cache: False

  classes: 20
  ignore_label: -100

  input_channel: 3
  scale: 50   # voxel_size = 1 / scale, scale 50(2cm)
  batch_size: 2
  full_scale: [128, 512]
  max_npoint: 250000
  mode: 4 # 4=mean

STRUCTURE:
  model_name: pointgroup
  backbone: pointnet++_shi # pointnet, pointnet++_yanx, pointnet++_shi
  m: 32 # 16 or 32
  block_residual: True
  block_reps: 2
  scatter_type: max
  unet3d_num_levels: 3
  model_mode: Jiang_original_PointGroup
  # Center_clustering or Jiang_original_PointGroup or Yu_refine_clustering_PointGroup
  # or Li_simple_backbone_PointGroup or Yu_refine_clustering_scorenet_PointGroup
  # or PointNet_point_prediction_test_PointGroup or Yu_rc_scorenet_confidence_PointGroup
  # or PointNet_sample_PointGroup or Yu_RC_ScoreNet_Conf_Transformer_PointGroup
  # or Yu_stuff_recurrent_PointGroup or Yu_stuff_remove_PointGroup or Yu_local_proposal_PointGroup
  # or Center_sample_cluster or Fan_center_loss_PointGroup or Position_enhanced_PointGroup or Fan_occupancy_PointGroup
  # or Center_pointnet++_clustering

  use_coords: True
  use_ori_coords: True
  pointnet_include_rgb: True

TRAIN:
  epochs: 384
  train_workers: 8 # data loader workers
  optim: Adam # Adam or SGD
  lr: 0.001
  step_epoch: 384
  multiplier: 0.5
  momentum: 0.9
  weight_decay: 0.0001
  save_freq: 16  # also eval_freq

  focal_loss: {
    'alpha': 0.25,
    'gamma': 2,
  }

  instance_triplet_loss: {
    'activate': False,
    'margin': 0.3,
    'p': 1,
    'num_sampled_points': 128,
  }

  stuff_norm_loss: {
    'activate': False,
  }

  feature_variance_loss: {
    'activate': False,
    'variance_threshold': 0.1,
  }

  feature_distance_loss: {
    'activate': False,
    'distance_threshold': 1.5,
  }

  feature_instance_regression_loss: {
    'activate': False,
  }

  point_reconstruction_loss: {
    'activate': True,
  }

  loss_weights: {
    'point_semantic': 1.0,
    'point_offset_norm': 1.0,
    'point_offset_dir': 1.0,
    # center related loss
    'center_prob': 1.0,
    'center_semantic': 1.0,
    'center_offset': 1.0,
    # other loss
    'score': 1.0,
    'stuff_feats_norm': 1.0,
    'point_semantic_center': 1.0,
    'point_instance_triplet': 1.0,
    # three losses from OccuSeg
    'feature_variance_loss': 1.0,
    'feature_distance_loss': 1.0,
    'feature_instance_regression_loss': 0.001,
    'voxel_occupancy_loss': 1.0,
    'local_point_semantic_loss': 1.0,
    'local_point_offset_norm': 1.0,
    'local_point_offset_dir': 1.0,
    'center_offset_norm_loss': 1.0,
    'center_offset_dir_loss': 1.0,
    'point_reconstruction_loss': 1.0,
  }

  heatmap_sigma: 0
  min_IoU: 0.5
  offset_norm_criterion: l1 # l1 or l2 or triplet

  clip: False

  proposal_refinement: {
    'refine_times': 2,
    'proposal_refine_scale': 50,
    'proposal_refine_full_scale': 128,
  }

  Proposal_Transformer: {
    'multi_heads': 2,
    'num_decoder_layers': 1,
    'dim_feedforward': 64
  }

  UNet_Transformer: {
    'activate': False,
    'multi_heads': 4,
    'num_encoder_layers': 1,
    'dim_feedforward': 448,
    'dropout': 0.0,
  }

  local_proposal: {
    'topk': 3,
    'dist_th': 0.5,
    'scatter_mean_target': False, # feature or prediction
    'local_proposal_scale': 50,
    'local_proposal_full_scale': 128,
  }

  stuff_recurrent: {
    'recurrent_times': 2,
  }

  occupancy_cluster: {
    'occupancy_threshold': 0.75,
    'occupancy_threshold_shift': 1.0,
    'occupancy_filter_threshold': 0.3,
  }

  fg_thresh: 0.75
  bg_thresh: 0.25

  score_scale: 50 # the minimal voxel size is 2cm
  score_fullscale: 14
  score_mode: 4 # mean

  pretrain_path:
  pretrain_module: []
  fix_module: []

  remove_class: []

  validation: True

GROUP:
  ### point grouping
  cluster_radius: 0.03
  cluster_meanActive: 50
  cluster_shift_meanActive: 300
  cluster_npoint_thre: 50
  cluster_sets: P # P or Q

  prepare_epochs: 128

TEST:
  split: val
  test_epoch: 384
  test_workers: 16
  test_seed: 567

  TEST_NMS_THRESH: 0.3
  TEST_SCORE_THRESH: 0.09
  TEST_NPOINT_THRESH: 100
  TEST_DIST_THRESH: 2

  eval: True
  eval_save: {
    'grid_points': False,
    'semantic': False,
    'instance': False,
    'pt_offsets': False,
    'pt_shifted_coords': False,
    'occupancy': False,
  }

DISTRIBUTE:
  nodes: 1
  ngpu_per_node: 2
  tcp_port: 18888

  sync_bn: False